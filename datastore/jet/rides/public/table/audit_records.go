//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var AuditRecords = newAuditRecordsTable("public", "audit_records", "")

type auditRecordsTable struct {
	postgres.Table

	//Columns
	ID           postgres.ColumnInteger
	Action       postgres.ColumnString
	CreatedAt    postgres.ColumnTimestampz
	Data         postgres.ColumnString
	OriginIP     postgres.ColumnString
	ResourceID   postgres.ColumnInteger
	ResourceType postgres.ColumnString
	UserID       postgres.ColumnInteger

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type AuditRecordsTable struct {
	auditRecordsTable

	EXCLUDED auditRecordsTable
}

// AS creates new AuditRecordsTable with assigned alias
func (a AuditRecordsTable) AS(alias string) *AuditRecordsTable {
	return newAuditRecordsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new AuditRecordsTable with assigned schema name
func (a AuditRecordsTable) FromSchema(schemaName string) *AuditRecordsTable {
	return newAuditRecordsTable(schemaName, a.TableName(), a.Alias())
}

func newAuditRecordsTable(schemaName, tableName, alias string) *AuditRecordsTable {
	return &AuditRecordsTable{
		auditRecordsTable: newAuditRecordsTableImpl(schemaName, tableName, alias),
		EXCLUDED:          newAuditRecordsTableImpl("", "excluded", ""),
	}
}

func newAuditRecordsTableImpl(schemaName, tableName, alias string) auditRecordsTable {
	var (
		IDColumn           = postgres.IntegerColumn("id")
		ActionColumn       = postgres.StringColumn("action")
		CreatedAtColumn    = postgres.TimestampzColumn("created_at")
		DataColumn         = postgres.StringColumn("data")
		OriginIPColumn     = postgres.StringColumn("origin_ip")
		ResourceIDColumn   = postgres.IntegerColumn("resource_id")
		ResourceTypeColumn = postgres.StringColumn("resource_type")
		UserIDColumn       = postgres.IntegerColumn("user_id")
		allColumns         = postgres.ColumnList{IDColumn, ActionColumn, CreatedAtColumn, DataColumn, OriginIPColumn, ResourceIDColumn, ResourceTypeColumn, UserIDColumn}
		mutableColumns     = postgres.ColumnList{ActionColumn, CreatedAtColumn, DataColumn, OriginIPColumn, ResourceIDColumn, ResourceTypeColumn, UserIDColumn}
	)

	return auditRecordsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:           IDColumn,
		Action:       ActionColumn,
		CreatedAt:    CreatedAtColumn,
		Data:         DataColumn,
		OriginIP:     OriginIPColumn,
		ResourceID:   ResourceIDColumn,
		ResourceType: ResourceTypeColumn,
		UserID:       UserIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
