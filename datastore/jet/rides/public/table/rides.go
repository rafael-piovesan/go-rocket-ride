//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Rides = newRidesTable("public", "rides", "")

type ridesTable struct {
	postgres.Table

	//Columns
	ID               postgres.ColumnInteger
	CreatedAt        postgres.ColumnTimestampz
	IdempotencyKeyID postgres.ColumnInteger
	OriginLat        postgres.ColumnFloat
	OriginLon        postgres.ColumnFloat
	TargetLat        postgres.ColumnFloat
	TargetLon        postgres.ColumnFloat
	StripeChargeID   postgres.ColumnString
	UserID           postgres.ColumnInteger

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type RidesTable struct {
	ridesTable

	EXCLUDED ridesTable
}

// AS creates new RidesTable with assigned alias
func (a RidesTable) AS(alias string) *RidesTable {
	return newRidesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new RidesTable with assigned schema name
func (a RidesTable) FromSchema(schemaName string) *RidesTable {
	return newRidesTable(schemaName, a.TableName(), a.Alias())
}

func newRidesTable(schemaName, tableName, alias string) *RidesTable {
	return &RidesTable{
		ridesTable: newRidesTableImpl(schemaName, tableName, alias),
		EXCLUDED:   newRidesTableImpl("", "excluded", ""),
	}
}

func newRidesTableImpl(schemaName, tableName, alias string) ridesTable {
	var (
		IDColumn               = postgres.IntegerColumn("id")
		CreatedAtColumn        = postgres.TimestampzColumn("created_at")
		IdempotencyKeyIDColumn = postgres.IntegerColumn("idempotency_key_id")
		OriginLatColumn        = postgres.FloatColumn("origin_lat")
		OriginLonColumn        = postgres.FloatColumn("origin_lon")
		TargetLatColumn        = postgres.FloatColumn("target_lat")
		TargetLonColumn        = postgres.FloatColumn("target_lon")
		StripeChargeIDColumn   = postgres.StringColumn("stripe_charge_id")
		UserIDColumn           = postgres.IntegerColumn("user_id")
		allColumns             = postgres.ColumnList{IDColumn, CreatedAtColumn, IdempotencyKeyIDColumn, OriginLatColumn, OriginLonColumn, TargetLatColumn, TargetLonColumn, StripeChargeIDColumn, UserIDColumn}
		mutableColumns         = postgres.ColumnList{CreatedAtColumn, IdempotencyKeyIDColumn, OriginLatColumn, OriginLonColumn, TargetLatColumn, TargetLonColumn, StripeChargeIDColumn, UserIDColumn}
	)

	return ridesTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:               IDColumn,
		CreatedAt:        CreatedAtColumn,
		IdempotencyKeyID: IdempotencyKeyIDColumn,
		OriginLat:        OriginLatColumn,
		OriginLon:        OriginLonColumn,
		TargetLat:        TargetLatColumn,
		TargetLon:        TargetLonColumn,
		StripeChargeID:   StripeChargeIDColumn,
		UserID:           UserIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
