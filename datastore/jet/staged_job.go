package jet

import (
	"context"
	"encoding/json"

	"github.com/rafael-piovesan/go-rocket-ride/entity"
	"github.com/rafael-piovesan/go-rocket-ride/entity/stagedjob"

	// dot import so go code would resemble as much as native SQL
	// dot import is not mandatory
	"github.com/rafael-piovesan/go-rocket-ride/datastore/jet/rides/public/model"
	. "github.com/rafael-piovesan/go-rocket-ride/datastore/jet/rides/public/table"
)

func (s *sqlStore) CreateStagedJob(ctx context.Context, sj *entity.StagedJob) (*entity.StagedJob, error) {
	newRecord := model.StagedJobs{
		ID:      sj.ID,
		JobName: sj.JobName.String(),
		JobArgs: "", // FIX ME
	}

	insertStmt := StagedJobs.INSERT(StagedJobs.AllColumns).
		MODEL(newRecord).
		RETURNING(StagedJobs.AllColumns)

	dest := model.StagedJobs{}

	err := insertStmt.Query(s.db, &dest)

	if err != nil {
		return nil, err
	}

	return toStagedJobEntity(&dest, nil), nil
}

func toStagedJobEntity(model *model.StagedJobs, ent *entity.StagedJob) *entity.StagedJob {
	if ent == nil {
		ent = &entity.StagedJob{}
	}

	ent.ID = model.ID
	ent.JobName = stagedjob.JobName(model.JobName)
	//TODO: Create the raw message from the source model generated by JET
	ent.JobArgs = json.RawMessage{}

	return ent
}
