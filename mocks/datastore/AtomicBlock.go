// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	datastore "github.com/rafael-piovesan/go-rocket-ride/v2/datastore"
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// AtomicBlock is an autogenerated mock type for the AtomicBlock type
type AtomicBlock struct {
	mock.Mock
}

// Execute provides a mock function with given fields: store
func (_m *AtomicBlock) Execute(store datastore.AtomicStore) error {
	ret := _m.Called(store)

	var r0 error
	if rf, ok := ret.Get(0).(func(datastore.AtomicStore) error); ok {
		r0 = rf(store)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewAtomicBlock creates a new instance of AtomicBlock. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewAtomicBlock(t testing.TB) *AtomicBlock {
	mock := &AtomicBlock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
